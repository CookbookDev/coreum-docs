name: Build and Push to GCR

on:
  push:
    branches:
      - main

env:
  GKE_ZONE: us-central1-c
  IMAGE: docs

jobs:
  bump_version:
    name: Automated Version Bump
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag_name.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Automated Version Bump'
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target-branch: 'main'
          commit-message: 'CI: bumps version to {{version}} [skip ci]'

      - name: Export new TAG
        id: tag_name
        run: |
          echo "tag=`cat package.json | jq -r .version`" >> $GITHUB_OUTPUT
        shell: bash

  setup-build-publish-webhook:
    name: Setup, Build, Publish, Webhook
    needs: bump_version
    strategy:
      fail-fast: true
      matrix:
        env: [ "devnet", "testnet", "mainnet"]
        include:
          - env: "devnet"
            WEBHOOK_ENDPOINT: https://keel.devnet-1.coreum.dev/v1/webhooks/native
            PUBLIC_URL: https://devnet.example.com
          - env: "testnet"
            WEBHOOK_ENDPOINT: https://keel.testnet-1.coreum.dev/v1/webhooks/native
            PUBLIC_URL: https://testnet.example.com
          - env: "mainnet"
            WEBHOOK_ENDPOINT: https://keel.mainnet-1.coreum.dev/v1/webhooks/native
            PUBLIC_URL: https://mainnet.example.com

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/${{ secrets.PROJECT_ID }}/$IMAGE:${{ matrix.TAG }}" \
            --tag "gcr.io/${{ secrets.PROJECT_ID }}/$IMAGE:latest" \
            --build-arg NEXT_PUBLIC_ALGOLIA_APP_ID=${{ secrets.NEXT_PUBLIC_ALGOLIA_APP_ID }} \
            --build-arg NEXT_PUBLIC_ALGOLIA_API_KEY=${{ secrets.NEXT_PUBLIC_ALGOLIA_API_KEY }} \
            --build-arg ALGOLIA_ADMIN_KEY=${{ secrets.ALGOLIA_ADMIN_KEY }} \
            --build-arg PUBLIC_URL=${{ matrix.PUBLIC_URL }} \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/${{ secrets.PROJECT_ID }}/$IMAGE:${{ matrix.TAG }}" && \
          docker push "gcr.io/${{ secrets.PROJECT_ID }}/$IMAGE:latest"

      # Send webhook to keel so it triggers image update.
      - name: Update Deployment
        run: |-
          curl -v -u "${{ secrets.KEEL_USERNAME }}:${{ secrets.KEEL_PASSWORD }}" -X POST ${{ matrix.WEBHOOK_ENDPOINT }} -H "Content-Type: application/json" -d "{\"name\": \"gcr.io/${{ secrets.PROJECT_ID }}/$IMAGE\", \"tag\": \"${{ matrix.TAG }}\"}"
